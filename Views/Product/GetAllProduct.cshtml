@using RealEstateMvc.Models.Enum
@using RealEstate_Mvc_.Dtos
@using System.Security.Claims
@using RealEstate_Mvc_.ViewModel

@*  <a href="@Url.Action("Details", "Property")" class="btn btn-primary">View Details</a>
 *@
 @model ProductViewModel
@if (ViewBag.Message != null || TempData["Message"] != null )
{
    <div class="alert alert-danger">
        @TempData["Message"]
        @ViewBag.Message
    </div>
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css" />


@{
    if (Model == null )
    {
        <p>No properties available.</p>
    }
    else
    {
        @if (User.FindFirst(ClaimTypes.Role) != null && User.FindFirst(ClaimTypes.Role).Value == "Customer")
        {
            <li style="list-style: none">

                @{
                    ViewBag.Title = "All Properties";
                }
                <style>
                    body {
                        margin: 0;
                        padding: 0;
                        font-family: Arial, sans-serif;
                    }


                    .custom-navbar {
                        display: flex;
                        justify-content: space-around;
                        align-items: center;
                        background-color: #343a40;
                        color: white;
                        padding: 10px 20px;
                        border-bottom: 2px solid #ccc;
                    }

                    .sidebar {
                        position: fixed;
                        top: 50px; /* Space for content above the sidebar */
                        left: 0;
                        width: 250px;
                        height: calc(100% - 50px); /* Adjust for the content above */
                        background-color: #f8f9fa;
                        transition: transform 0.3s ease;
                        transform: translateX(-100%);
                        z-index: 1000;
                        box-shadow: 2px 0 5px rgba(0,0,0,0.5);
                    }

                        .sidebar.expanded {
                            transform: translateX(0);
                            top: 140px;
                        }

                    #toggleBtn {
                        position: fixed; /* Ensure the button is always visible */
                        top: 170px; /* Adjust according to the content above */
                        left: 10px; /* Position near the left side */
                        z-index: 1100; /* Ensure it appears above other content */
                        background-color: #007bff; /* Make it stand out */
                        color: white;
                        border: none;
                        padding: 10px;
                        border-radius: 3px;
                        cursor: pointer;
                    }

                    .nav-bar {
                        margin-top: 20px;
                        padding: 10px;
                        display: contents;
                       
                    }
                    nav .custom-navbar
                    {
                        display: contents;
                    }

                      /*   .nav-bar img {
                            width: 100%;
                            border-radius: 50%;
                            margin-bottom: 20px;
                        } */

                        .nav-bar .btn {
                            display: block;
                            width: 100%;
                            margin-bottom: 10px;
                            text-align: left;
                        }

                    .main-content {
                        margin-left: 0;
                        transition: margin-left 0.3s ease;
                        padding: 20px;
                        padding-top: 70px; /* Ensure there's space for content above the body */
                    }

                        .main-content.expanded {
                            margin-left: 250px;
                        }





                    .card-img-top {
                        height: 200px;
                        object-fit: cover;
                    }

                    .btn-custom {
                        color: white;
                    }

                    .form-control-sm {
                        height: calc(1.5em + .75rem + 2px);
                        padding: .25rem .5rem;
                        font-size: .875rem;
                        line-height: 1.5;
                        border-radius: .2rem;
                    }

                    .btn-sm {
                        padding: .25rem .5rem;
                        font-size: .875rem;
                        line-height: 1.5;
                        border-radius: .2rem;
                        background-color: #007bff; /* Simple button color */
                        color: white;
                        margin-top: 3px;
                    }

                    .container {
                        margin-top: 80px; /* Adjust to account for fixed navbar height */
                    }

                    .form-inline {
                        display: flex;
                        flex-wrap: wrap;
                        gap: 10px; /* Space between form groups */
                    }

                        .form-inline .form-group {
                            flex: 1 1 calc(20% - 10px); /* Responsive width for form groups */
                            margin-bottom: 10px;
                            display: flex;
                            align-items: center;
                        }

                            .form-inline .form-group input,
                            .form-inline .form-group select {
                               
                                flex: 1;
                            }

                            .form-inline .form-group .btn {
                                flex-shrink: 0; /* Prevent button from shrinking */
                            }


                    .carousel-item img {
                        max-height: 500px;
                        object-fit: cover;
                    }

                    .profile-image {
                        width: 100px; /* Change this to the desired size */
                        height: 100px; /* Ensures the image stays square */
                        border-radius: 50%; /* Makes the image circular */
                        object-fit: cover; /* Ensures the image fits within the circle */
                    }

                    /* General Styles */
                    .container {
                        margin: 0 auto;
                    }

                    /* Form Styling */
                    .form-head {
                        background-color: #f8f9fa;
                        border-radius: 10px;
                        padding: 20px;
                        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
                    }

                    .form-label {
                        font-weight: bold;
                        margin-bottom: 5px;
                    }

                    /* Input and Button Styling */
                    .form-control {
                        border-radius: 5px;
                        font-size: 14px;
                    }

                    .input-group .btn {
                        border-radius: 0 5px 5px 0;
                        font-size: 14px;
                    }

                    .input-group input {
                        border-radius: 5px 0 0 5px;
                    }

                    /* Button Hover Effects */
                    .btn-primary {
                        background-color: #007bff;
                        border-color: #007bff;
                        transition: background-color 0.3s ease, transform 0.2s ease;
                    }

                        .btn-primary:hover {
                            background-color: #0056b3;
                            transform: scale(1.05);
                        }

                </style>
                <!DOCTYPE html>
                <html>
                <head>
                </head>
                <body>
                    <!-- Navigation Bar -->
                    <div class="sidebar collapsed" id="sidebar">
                        <div class="nav-bar">
                            <img src="~/properties/@ViewBag.image" alt="Customer Profile" class="profile-image">
                            <h5>Welcome,  @ViewBag.UserName</h5>
                            <a href="@Url.Action("GetAllCartegory", "Category")" class="btn btn-light btn-sm">Get All Categories</a>
                            <a href="@Url.Action("GetByName", "Category")" class="btn btn-light btn-sm">Get Category By Name</a>
                            <a href="@Url.Action("AddMoneyToWallet", "Customer")" class="btn btn-light btn-sm">Add Money to Wallet</a>
                            <a href="@Url.Action("UpdateCustomer", "Customer")" class="btn btn-light btn-sm">Update Profile</a>
                            <a href="@Url.Action("GetTransferByEmail", "Transaction")" class="btn btn-light btn-sm">See All Transactions</a>
                            <a href="@Url.Action("GetCustomerByEmail", "Customer")" class="btn btn-light btn-sm">View Profile</a>
                            <a href="@Url.Action("WalletLandingPage", "Wallet")" class="btn btn-light btn-sm">Wallet</a>
                        </div>
                    </div>

                    <!-- Toggle Button -->
                    <button id="toggleBtn">+</button>



                 <div class="container mt-5">
                     

                        <div class="container mt-5">
                            <!-- Search and Filter Form -->
                            <div class="form-head p-4 rounded shadow-sm bg-light">
                                <h4 class="text-center mb-4">Filter Products</h4>
                                <form asp-action="Index" method="get" class="row g-3">
                                    <!-- Filter by Description -->
                                    <div class="col-md-4">
                                        <label for="description" class="form-label">Search by Description</label>
                                        <div class="input-group">
                                            <input type="text" id="description" name="description" class="form-control" placeholder="Type here...">
                                            <button type="submit" asp-controller="Product" asp-action="GetProductByDescription" class="btn btn-primary">Go</button>
                                        </div>
                                    </div>

                                    <!-- Filter by Category -->
                                    <div class="col-md-4">
                                        <label for="category" class="form-label">Filter by Category</label>
                                        <div class="input-group">
                                            @Html.DropDownList("CategoryId", (SelectList)ViewBag.Categories, "Select a category", new { @class = "form-control" })
                                            <button type="submit" asp-controller="product" asp-action="GetProductByCartegoryId" class="btn btn-primary">Go</button>
                                        </div>
                                    </div>

                                    <!-- Filter by Price -->
                                    <div class="col-md-4">
                                        <label for="price" class="form-label">Filter by Price</label>
                                        <div class="input-group">
                                            <input type="number" id="price" name="price" class="form-control" placeholder="Enter budget" min="0" step="0.01">
                                            <button type="submit" asp-controller="product" asp-action="GetProductByPrice" class="btn btn-primary">Go</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                        



                        <!-- Properties List -->
                        <div class="row mt-4">
                            @if (Model == null )
                            {
                                <p class="col-12">No Products available.</p>
                            }
                            else
                            {
                                @foreach (var product in Model.product)
                                {
                                    <div class="col-md-4 mb-4">
                                        <div class="card">
                                            

                                                @if (product.Images != null && product.Images.Count > 0)
                                                {
                                                    var profilePictures = product.Images.ToList();

                                                    <div id="propertyCarousel" class="carousel slide" data-bs-ride="carousel">
                                                    <div class="carousel-inner">
                                                        @for (int i = 0; i < product.Images.Count; i++)
                                                        {
                                                            var isActive = i == 0 ? "active" : ""; // Mark the first slide as active
                                                            <div class="carousel-item @isActive">
                                                                <img src="~/properties/@product.Images[i]" class="d-block w-100" alt="Property Image">
                                                            </div>
                                                        }
                                                    </div>
                                                   
                                                        <a class="carousel-control-prev" href="#propertyCarousel" role="button" data-bs-slide="prev">
                                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                            <span class="visually-hidden">Previous</span>
                                                        </a>
                                                        <a class="carousel-control-next" href="#propertyCarousel" role="button" data-bs-slide="next">
                                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                            <span class="visually-hidden">Next</span>
                                                        </a>
                                                    </div>
                                                }

                                            <div class="card-body">
                                                <p class="card-text">@product.Description</p>
                                                <p class="card-text"><strong>Price:</strong> @product.Price</p>
                                                <p class="card-text"><strong>Name:</strong> @product.Name</p>
                                                <p class="card-text"><strong>Category:</strong> @product.CategoryName<p>
                                                <p class="card-text"><strong>Available:</strong> @product.IsAvailable</p>
                                                <a href="@Url.Action("GetProductById", "Product", new { id = product.Id })" class="btn btn-primary btn-sm">View Details</a>
                                                <a href="@Url.Action("EnterPasscode", "Transaction", new { productId = product.Id, email = product.CurrentUser })"
                                                   class="btn btn-success">Grab Your Product</a>

                                                        
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </body>
                <script>
                    document.getElementById('toggleBtn').addEventListener('click', function () {
                        var sidebar = document.getElementById('sidebar');
                        var mainContent = document.getElementById('mainContent');
                        if (sidebar.classList.contains('collapsed')) {
                            sidebar.classList.remove('collapsed');
                            sidebar.classList.add('expanded');
                            mainContent.classList.add('expanded');
                            this.textContent = '-';
                        } else {
                            sidebar.classList.remove('expanded');
                            sidebar.classList.add('collapsed');
                            mainContent.classList.remove('expanded');
                            this.textContent = '+';
                        }
                    });

                    // Bootstrap Carousel initialization (if needed)
                    var myCarousel = document.querySelector('#propertyCarousel');
                    var carousel = new bootstrap.Carousel(myCarousel, {
                        interval: 3000, // 3 seconds
                        ride: 'carousel'
                    });
                </script>

                </html>



            </li>
        }
        else
        {
            <div class="container mt-5">
              
                <script>
                    document.getElementById('toggleBtn').addEventListener('click', function () {
                        var sidebar = document.getElementById('sidebar');
                        var mainContent = document.getElementById('mainContent');
                        if (sidebar.classList.contains('collapsed')) {
                            sidebar.classList.remove('collapsed');
                            sidebar.classList.add('expanded');
                            mainContent.classList.add('expanded');
                            this.textContent = '-';
                        } else {
                            sidebar.classList.remove('expanded');
                            sidebar.classList.add('collapsed');
                            mainContent.classList.remove('expanded');
                            this.textContent = '+';
                        }
                    });

                    // Bootstrap Carousel initialization (if needed)
                    var myCarousel = document.querySelector('#propertyCarousel');
                    var carousel = new bootstrap.Carousel(myCarousel, {
                        interval: 3000, // 3 seconds
                        ride: 'carousel'
                    });
                </script>
                @if (User.FindFirst(ClaimTypes.Role) != null && User.FindFirst(ClaimTypes.Role).Value == "Customer")
                {
                    <div class="card-footer2">
                        <a href="@Url.Action("GetAllProperty", "Property")" class="btn btn-primary">Go Back</a>
                    </div>
                }
                else
                {
                    <div class="card-footer2">
                        <a href="@Url.Action("SuperAdminDashBord", "User")" class="btn btn-primary">Go Back</a>
                    </div>
                }
            </div>
        }
       
    }
}
 

